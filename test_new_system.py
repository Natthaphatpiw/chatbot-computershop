#!/usr/bin/env python3

import requests
import json
import time
import subprocess
import sys

def test_new_system():
    print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏±‡∏ö database products")
    print("=" * 50)
    
    # Start backend
    backend_proc = subprocess.Popen(
        [sys.executable, '/Users/pp/Downloads/chatbot-computershop/backend/start.py'],
        cwd='/Users/pp/Downloads/chatbot-computershop/backend'
    )
    
    # Wait for backend to start
    time.sleep(3)
    
    try:
        # Test queries based on new categories
        test_queries = [
            "‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ‡∏á‡∏ö 20000",
            "‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏à‡∏≠ RTX ‡πÄ‡∏Å‡∏°‡∏°‡∏¥‡πà‡∏á",
            "‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î mechanical",
            "‡∏´‡∏π‡∏ü‡∏±‡∏á gaming ‡πÑ‡∏£‡πâ‡∏™‡∏≤‡∏¢",
            "‡∏à‡∏≠‡∏°‡∏≠‡∏ô‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå 27 ‡∏ô‡∏¥‡πâ‡∏ß",
            "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5000",
        ]
        
        for i, query in enumerate(test_queries, 1):
            print(f"\nüìù Test {i}: {query}")
            print("-" * 30)
            
            try:
                response = requests.post(
                    "http://localhost:8000/api/chat",
                    json={"message": query},
                    timeout=30
                )
                
                if response.status_code == 200:
                    data = response.json()
                    
                    print("‚úÖ Response received")
                    print(f"üìä Products found: {len(data.get('products', []))}")
                    print(f"üí¨ Response length: {len(data.get('message', ''))}")
                    
                    # Check MongoDB Query
                    mongo_query = data.get('mongoQuery')
                    if mongo_query:
                        print("üîç MongoDB Query:")
                        print(json.dumps(mongo_query, ensure_ascii=False, indent=2))
                    
                    # Show product details for first product
                    products = data.get('products', [])
                    if products:
                        product = products[0]
                        print(f"\nüì¶ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏£‡∏Å:")
                        print(f"   ‡∏ä‡∏∑‡πà‡∏≠: {product.get('title', '')[:60]}...")
                        print(f"   ‡∏´‡∏°‡∏ß‡∏î: {product.get('cateName', 'N/A')}")
                        print(f"   ‡∏£‡∏≤‡∏Ñ‡∏≤: {product.get('salePrice', 0):,.0f} ‡∏ø")
                        print(f"   ‡∏™‡∏ï‡πá‡∏≠‡∏Å: {product.get('stockQuantity', 0)}")
                        print(f"   ‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ: {'‚úÖ' if product.get('freeShipping') else '‚ùå'}")
                        print(f"   ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 2 ‡∏õ‡∏µ: {'‚úÖ' if product.get('product_warranty_2_year') else '‚ùå'}")
                        print(f"   ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô 3 ‡∏õ‡∏µ: {'‚úÖ' if product.get('product_warranty_3_year') else '‚ùå'}")
                        
                        # Check image URL
                        images = product.get('images', {})
                        if images and 'original' in images:
                            urls = images['original'].get('url', [])
                            if urls:
                                print(f"   ‡∏£‡∏π‡∏õ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {urls[0][:50]}...")
                    
                    print(f"\nüí≠ Response preview: {data.get('message', '')[:200]}...")
                    
                else:
                    print(f"‚ùå HTTP Error: {response.status_code}")
                    print(f"   Response: {response.text}")
                    
            except Exception as e:
                print(f"‚ùå Error: {e}")
    
    finally:
        # Cleanup
        backend_proc.terminate()
        backend_proc.wait()
    
    print("\nüéØ Test completed!")

if __name__ == "__main__":
    test_new_system()